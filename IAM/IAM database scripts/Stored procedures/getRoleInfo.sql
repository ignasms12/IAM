;CREATE   PROCEDURE [AD].[getRoleInfo](    @userId uniqueidentifier,    @targetRoleId uniqueidentifier,    @mode nvarchar(40),    @statusMessage nvarchar(60) OUTPUT)ASBEGIN    IF @targetRoleId IS NULL    BEGIN        SET @statusMessage = 'Invalid parameters provided'        RETURN -1;    END    IF ISJSON(@mode) = 0    BEGIN        SET @statusMessage = 'Incorrect json provided'        RETURN -2;    END    IF 1 = (SELECT 1 FROM OPENJSON(@mode) WHERE [value] = 'basic') -- GET basic role info    BEGIN        IF AD.checkPermissions(@userId, 'AD.roles.view') <> 0        BEGIN            SET @statusMessage = 'No permissions'            RETURN -3;        END        SELECT [id]        ,[name]        ,[createdTs]        ,[modifiedTs]        ,[createdBy]        ,[modifiedBy] FROM [AD].[roles] WHERE id = @targetRoleId    END        IF 1 = (SELECT 1 FROM OPENJSON(@mode) WHERE [value] = 'users') -- GET role users    BEGIN        IF AD.checkPermissions(@userId, 'AD.roles.view') <> 0 OR AD.checkPermissions(@userId, 'AD.users.view') <> 0         BEGIN            SET @statusMessage = 'No permissions'            RETURN -3;        END        SELECT u.[id]        ,u.[username]        ,u.[email]        ,u.[createdTs]        ,u.[modifiedTs]        ,u.[createdBy]        ,u.[modifiedBy]        FROM [AD].[users] u        INNER JOIN [AD].[userRoles] ur ON u.[id] = ur.[userId]        WHERE ur.[roleId] = @targetRoleId    END    IF 1 = (SELECT 1 FROM OPENJSON(@mode) WHERE [value] = 'functions') -- GET user functions    BEGIN        IF AD.checkPermissions(@userId, 'AD.functions.view') <> 0 OR AD.checkPermissions(@userId, 'AD.roles.view') <> 0        BEGIN            SET @statusMessage = 'No permissions'            RETURN -3;        END        SELECT f.[id]        ,f.[name]        ,f.[description]        ,f.[createdTs]        ,f.[modifiedTs]        ,f.[createdBy]        ,f.[modifiedBy]        FROM [AD].[functions] f        INNER JOIN [AD].[roleFunctions] rf ON f.[id] = rf.[functionId]        WHERE rf.[roleId] = @targetRoleId    ENDEND ; 